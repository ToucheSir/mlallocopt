:(function var"##tape_loss#663"(x1::typeof(loss), x2::Chain{Tuple{Chain{Tuple{Conv{2, 4, typeof(relu), Array{Float32, 4}, Vector{Float32}}, MaxPool{2, 4}, Conv{2, 4, typeof(relu), Array{Float32, 4}, Vector{Float32}}, MaxPool{2, 4}, Conv{2, 4, typeof(relu), Array{Float32, 4}, Vector{Float32}}, Conv{2, 4, typeof(relu), Array{Float32, 4}, Vector{Float32}}, Conv{2, 4, typeof(relu), Array{Float32, 4}, Vector{Float32}}, MaxPool{2, 4}}}, Chain{Tuple{AdaptiveMeanPool{4, 2}, typeof(flatten), Dropout{Float64, Colon, Random.TaskLocalRNG}, Dense{typeof(relu), Matrix{Float32}, Vector{Float32}}, Dropout{Float64, Colon, Random.TaskLocalRNG}, Dense{typeof(relu), Matrix{Float32}, Vector{Float32}}, Dense{typeof(identity), Matrix{Float32}, Vector{Float32}}}}}}, x3::Array{Float32, 4}, x4::Matrix{Float32})
      x5 = Flux.Losses.mse
      x6 = (getproperty)(x2, :layers)
      x7 = (getindex)(x6, 1)
      x8 = (getproperty)(x7, :layers)
      x9 = (getindex)(x8, 1)
      x10 = (ndims)(x3)
      x11 = (-)(x10, 1)
      x12 = (getproperty)(x9, :weight)
      x13 = (getproperty)(x9, :weight)
      x14 = (ndims)(x13)
      x15 = (-)(x14, 1)
      x16 = (size)(x12, x15)
      x17 = (getproperty)(x9, :groups)
      x18 = (*)(x16, x17)
      x19 = (Pair)(x11, x18)
      x20 = (Flux._size_check)(x9, x3, x19)
      x21 = NNlib.fast_act
      x22 = (getproperty)(x9, :σ)
      x23 = nothing
      x24 = (Flux.conv_dims)(x9, x3)
      x25 = (Flux._match_eltype)(x9, x3)
      x26 = +
      x27 = (getproperty)(x9, :weight)
      x28 = (NNlib.conv)(x25, x27, x24)
      x29 = (getproperty)(x9, :bias)
      x30 = (getproperty)(x9, :stride)
      x31 = reshape
      x32 = (tuple)(x29)
      x33 = (Umlaut.__new__)(Flux.var"#227#228")
      x34 = (map)(x33, x30)
      x35 = (tuple)(Colon(), 1)
      x36 = (Umlaut.check_variable_length)(x32, 1, 32)
      x37 = (Umlaut.check_variable_length)(x34, 2, 34)
      x38 = (getindex)(x34, 1)
      x39 = (getindex)(x34, 2)
      x40 = (Umlaut.check_variable_length)(x35, 2, 35)
      x41 = x31(x29, x38, x39, Colon(), 1)
      x42 = (Base.Broadcast.broadcasted)(x26, x28, x41)
      x43 = (Base.Broadcast.broadcasted)(x22, x42)
      x44 = (Base.Broadcast.materialize)(x43)
      x45 = (getindex)(x8, 2)
      x46 = (:padding, :stride)
      x47 = (Core.apply_type)(NamedTuple, x46)
      x48 = (getproperty)(x45, :pad)
      x49 = (getproperty)(x45, :stride)
      x50 = (tuple)(x48, x49)
      x51 = x47(x50)
      x52 = PoolDims
      x53 = (getproperty)(x45, :k)
      x54 = (Core.kwcall)(x51, x52, x44, x53)
      x55 = (NNlib.maxpool)(x44, x54)
      x56 = (getindex)(x8, 3)
      x57 = (ndims)(x55)
      x58 = (-)(x57, 1)
      x59 = (getproperty)(x56, :weight)
      x60 = (getproperty)(x56, :weight)
      x61 = (ndims)(x60)
      x62 = (-)(x61, 1)
      x63 = (size)(x59, x62)
      x64 = (getproperty)(x56, :groups)
      x65 = (*)(x63, x64)
      x66 = (Pair)(x58, x65)
      x67 = (Flux._size_check)(x56, x55, x66)
      x68 = NNlib.fast_act
      x69 = (getproperty)(x56, :σ)
      x70 = nothing
      x71 = (Flux.conv_dims)(x56, x55)
      x72 = (Flux._match_eltype)(x56, x55)
      x73 = +
      x74 = (getproperty)(x56, :weight)
      x75 = (NNlib.conv)(x72, x74, x71)
      x76 = (getproperty)(x56, :bias)
      x77 = (getproperty)(x56, :stride)
      x78 = reshape
      x79 = (tuple)(x76)
      x80 = (Umlaut.__new__)(Flux.var"#227#228")
      x81 = (map)(x80, x77)
      x82 = (tuple)(Colon(), 1)
      x83 = (Umlaut.check_variable_length)(x79, 1, 79)
      x84 = (Umlaut.check_variable_length)(x81, 2, 81)
      x85 = (getindex)(x81, 1)
      x86 = (getindex)(x81, 2)
      x87 = (Umlaut.check_variable_length)(x82, 2, 82)
      x88 = x78(x76, x85, x86, Colon(), 1)
      x89 = (Base.Broadcast.broadcasted)(x73, x75, x88)
      x90 = (Base.Broadcast.broadcasted)(x69, x89)
      x91 = (Base.Broadcast.materialize)(x90)
      x92 = (getindex)(x8, 4)
      x93 = (:padding, :stride)
      x94 = (Core.apply_type)(NamedTuple, x93)
      x95 = (getproperty)(x92, :pad)
      x96 = (getproperty)(x92, :stride)
      x97 = (tuple)(x95, x96)
      x98 = x94(x97)
      x99 = PoolDims
      x100 = (getproperty)(x92, :k)
      x101 = (Core.kwcall)(x98, x99, x91, x100)
      x102 = (NNlib.maxpool)(x91, x101)
      x103 = (getindex)(x8, 5)
      x104 = (ndims)(x102)
      x105 = (-)(x104, 1)
      x106 = (getproperty)(x103, :weight)
      x107 = (getproperty)(x103, :weight)
      x108 = (ndims)(x107)
      x109 = (-)(x108, 1)
      x110 = (size)(x106, x109)
      x111 = (getproperty)(x103, :groups)
      x112 = (*)(x110, x111)
      x113 = (Pair)(x105, x112)
      x114 = (Flux._size_check)(x103, x102, x113)
      x115 = NNlib.fast_act
      x116 = (getproperty)(x103, :σ)
      x117 = nothing
      x118 = (Flux.conv_dims)(x103, x102)
      x119 = (Flux._match_eltype)(x103, x102)
      x120 = +
      x121 = (getproperty)(x103, :weight)
      x122 = (NNlib.conv)(x119, x121, x118)
      x123 = (getproperty)(x103, :bias)
      x124 = (getproperty)(x103, :stride)
      x125 = reshape
      x126 = (tuple)(x123)
      x127 = (Umlaut.__new__)(Flux.var"#227#228")
      x128 = (map)(x127, x124)
      x129 = (tuple)(Colon(), 1)
      x130 = (Umlaut.check_variable_length)(x126, 1, 126)
      x131 = (Umlaut.check_variable_length)(x128, 2, 128)
      x132 = (getindex)(x128, 1)
      x133 = (getindex)(x128, 2)
      x134 = (Umlaut.check_variable_length)(x129, 2, 129)
      x135 = x125(x123, x132, x133, Colon(), 1)
      x136 = (Base.Broadcast.broadcasted)(x120, x122, x135)
      x137 = (Base.Broadcast.broadcasted)(x116, x136)
      x138 = (Base.Broadcast.materialize)(x137)
      x139 = (getindex)(x8, 6)
      x140 = (ndims)(x138)
      x141 = (-)(x140, 1)
      x142 = (getproperty)(x139, :weight)
      x143 = (getproperty)(x139, :weight)
      x144 = (ndims)(x143)
      x145 = (-)(x144, 1)
      x146 = (size)(x142, x145)
      x147 = (getproperty)(x139, :groups)
      x148 = (*)(x146, x147)
      x149 = (Pair)(x141, x148)
      x150 = (Flux._size_check)(x139, x138, x149)
      x151 = NNlib.fast_act
      x152 = (getproperty)(x139, :σ)
      x153 = nothing
      x154 = (Flux.conv_dims)(x139, x138)
      x155 = (Flux._match_eltype)(x139, x138)
      x156 = +
      x157 = (getproperty)(x139, :weight)
      x158 = (NNlib.conv)(x155, x157, x154)
      x159 = (getproperty)(x139, :bias)
      x160 = (getproperty)(x139, :stride)
      x161 = reshape
      x162 = (tuple)(x159)
      x163 = (Umlaut.__new__)(Flux.var"#227#228")
      x164 = (map)(x163, x160)
      x165 = (tuple)(Colon(), 1)
      x166 = (Umlaut.check_variable_length)(x162, 1, 162)
      x167 = (Umlaut.check_variable_length)(x164, 2, 164)
      x168 = (getindex)(x164, 1)
      x169 = (getindex)(x164, 2)
      x170 = (Umlaut.check_variable_length)(x165, 2, 165)
      x171 = x161(x159, x168, x169, Colon(), 1)
      x172 = (Base.Broadcast.broadcasted)(x156, x158, x171)
      x173 = (Base.Broadcast.broadcasted)(x152, x172)
      x174 = (Base.Broadcast.materialize)(x173)
      x175 = (getindex)(x8, 7)
      x176 = (ndims)(x174)
      x177 = (-)(x176, 1)
      x178 = (getproperty)(x175, :weight)
      x179 = (getproperty)(x175, :weight)
      x180 = (ndims)(x179)
      x181 = (-)(x180, 1)
      x182 = (size)(x178, x181)
      x183 = (getproperty)(x175, :groups)
      x184 = (*)(x182, x183)
      x185 = (Pair)(x177, x184)
      x186 = (Flux._size_check)(x175, x174, x185)
      x187 = NNlib.fast_act
      x188 = (getproperty)(x175, :σ)
      x189 = nothing
      x190 = (Flux.conv_dims)(x175, x174)
      x191 = (Flux._match_eltype)(x175, x174)
      x192 = +
      x193 = (getproperty)(x175, :weight)
      x194 = (NNlib.conv)(x191, x193, x190)
      x195 = (getproperty)(x175, :bias)
      x196 = (getproperty)(x175, :stride)
      x197 = reshape
      x198 = (tuple)(x195)
      x199 = (Umlaut.__new__)(Flux.var"#227#228")
      x200 = (map)(x199, x196)
      x201 = (tuple)(Colon(), 1)
      x202 = (Umlaut.check_variable_length)(x198, 1, 198)
      x203 = (Umlaut.check_variable_length)(x200, 2, 200)
      x204 = (getindex)(x200, 1)
      x205 = (getindex)(x200, 2)
      x206 = (Umlaut.check_variable_length)(x201, 2, 201)
      x207 = x197(x195, x204, x205, Colon(), 1)
      x208 = (Base.Broadcast.broadcasted)(x192, x194, x207)
      x209 = (Base.Broadcast.broadcasted)(x188, x208)
      x210 = (Base.Broadcast.materialize)(x209)
      x211 = (getindex)(x8, 8)
      x212 = (:padding, :stride)
      x213 = (Core.apply_type)(NamedTuple, x212)
      x214 = (getproperty)(x211, :pad)
      x215 = (getproperty)(x211, :stride)
      x216 = (tuple)(x214, x215)
      x217 = x213(x216)
      x218 = PoolDims
      x219 = (getproperty)(x211, :k)
      x220 = (Core.kwcall)(x217, x218, x210, x219)
      x221 = (NNlib.maxpool)(x210, x220)
      x222 = (getindex)(x6, 2)
      x223 = (getproperty)(x222, :layers)
      x224 = (getindex)(x223, 1)
      x225 = (size)(x221)
      x226 = (lastindex)(x225)
      x227 = (-)(x226, 2)
      x228 = (Colon())(1, x227)
      x229 = (getindex)(x225, x228)
      x230 = (getproperty)(x224, :out)
      x231 = (tuple)()
      x232 = nothing
      x233 = (Base.Broadcast.broadcastable)(x229)
      x234 = (Base.Broadcast.broadcastable)(x230)
      x235 = (map)(Base.Broadcast.broadcastable, x231)
      x236 = Base.Broadcast.broadcasted
      x237 = Base.Broadcast.combine_styles
      x238 = (tuple)(x233, x234)
      x239 = (Umlaut.check_variable_length)(x238, 2, 238)
      x240 = (Umlaut.check_variable_length)(x235, 0, 235)
      x241 = x237(x233, x234)
      x242 = (tuple)(x241, div, x233, x234)
      x243 = (Umlaut.check_variable_length)(x242, 4, 242)
      x244 = (Umlaut.check_variable_length)(x235, 0, 235)
      x245 = x236(x241, div, x233, x234)
      x246 = (Base.Broadcast.materialize)(x245)
      x247 = -
      x248 = *
      x249 = (Base.Broadcast.broadcasted)(-, x230, 1)
      x250 = (Base.Broadcast.broadcasted)(x248, x249, x246)
      x251 = (Base.Broadcast.broadcasted)(x247, x229, x250)
      x252 = (Base.Broadcast.materialize)(x251)
      x253 = 0
      x254 = (:padding, :stride)
      x255 = (Core.apply_type)(NamedTuple, x254)
      x256 = (tuple)(x253, x246)
      x257 = x255(x256)
      x258 = (Core.kwcall)(x257, PoolDims, x221, x252)
      x259 = (NNlib.meanpool)(x221, x258)
      x260 = (getindex)(x223, 2)
      x261 = Colon()
      x262 = 4
      x263 = (size)(x259, x262)
      x264 = (reshape)(x259, x261, x263)
      x265 = (getindex)(x223, 3)
      x266 = (getproperty)(x265, :p)
      x267 = (getproperty)(x265, :active)
      x268 = (isnothing)(x267)
      x269 = NNlib.within_gradient
      x270 = x269(x264)
      x271 = (*)(x266, x270)
      x272 = (:dims,)
      x273 = (Core.apply_type)(NamedTuple, x272)
      x274 = (getproperty)(x265, :dims)
      x275 = (tuple)(x274)
      x276 = x273(x275)
      x277 = NNlib.dropout
      x278 = (getproperty)(x265, :rng)
      x279 = (Core.kwcall)(x276, x277, x278, x264, x271)
      x280 = (getindex)(x223, 4)
      x281 = (getproperty)(x280, :weight)
      x282 = (size)(x281, 2)
      x283 = (Pair)(1, x282)
      x284 = (Flux._size_check)(x280, x279, x283)
      x285 = NNlib.fast_act
      x286 = (getproperty)(x280, :σ)
      x287 = nothing
      x288 = (Flux._match_eltype)(x280, x279)
      x289 = +
      x290 = (getproperty)(x280, :weight)
      x291 = (*)(x290, x288)
      x292 = (getproperty)(x280, :bias)
      x293 = (Base.Broadcast.broadcasted)(x289, x291, x292)
      x294 = (Base.Broadcast.broadcasted)(x286, x293)
      x295 = (Base.Broadcast.materialize)(x294)
      x296 = (getindex)(x223, 5)
      x297 = (getproperty)(x296, :p)
      x298 = (getproperty)(x296, :active)
      x299 = (isnothing)(x298)
      x300 = NNlib.within_gradient
      x301 = x300(x295)
      x302 = (*)(x297, x301)
      x303 = (:dims,)
      x304 = (Core.apply_type)(NamedTuple, x303)
      x305 = (getproperty)(x296, :dims)
      x306 = (tuple)(x305)
      x307 = x304(x306)
      x308 = NNlib.dropout
      x309 = (getproperty)(x296, :rng)
      x310 = (Core.kwcall)(x307, x308, x309, x295, x302)
      x311 = (getindex)(x223, 6)
      x312 = (getproperty)(x311, :weight)
      x313 = (size)(x312, 2)
      x314 = (Pair)(1, x313)
      x315 = (Flux._size_check)(x311, x310, x314)
      x316 = NNlib.fast_act
      x317 = (getproperty)(x311, :σ)
      x318 = nothing
      x319 = (Flux._match_eltype)(x311, x310)
      x320 = +
      x321 = (getproperty)(x311, :weight)
      x322 = (*)(x321, x319)
      x323 = (getproperty)(x311, :bias)
      x324 = (Base.Broadcast.broadcasted)(x320, x322, x323)
      x325 = (Base.Broadcast.broadcasted)(x317, x324)
      x326 = (Base.Broadcast.materialize)(x325)
      x327 = (getindex)(x223, 7)
      x328 = (getproperty)(x327, :weight)
      x329 = (size)(x328, 2)
      x330 = (Pair)(1, x329)
      x331 = (Flux._size_check)(x327, x326, x330)
      x332 = NNlib.fast_act
      x333 = (getproperty)(x327, :σ)
      x334 = nothing
      x335 = (Flux._match_eltype)(x327, x326)
      x336 = +
      x337 = (getproperty)(x327, :weight)
      x338 = (*)(x337, x335)
      x339 = (getproperty)(x327, :bias)
      x340 = (Base.Broadcast.broadcasted)(x336, x338, x339)
      x341 = (Base.Broadcast.broadcasted)(x333, x340)
      x342 = (Base.Broadcast.materialize)(x341)
      x343 = nothing
      x344 = (Flux.Losses._check_sizes)(x342, x4)
      x345 = abs2
      x346 = (Base.Broadcast.broadcasted)(-, x342, x4)
      x347 = (tuple)()
      x348 = nothing
      x349 = (Base.Broadcast.broadcastable)(x346)
      x350 = (map)(Base.Broadcast.broadcastable, x347)
      x351 = Base.Broadcast.broadcasted
      x352 = Base.Broadcast.combine_styles
      x353 = (tuple)(x349)
      x354 = (Umlaut.check_variable_length)(x353, 1, 353)
      x355 = (Umlaut.check_variable_length)(x350, 0, 350)
      x356 = x352(x349)
      x357 = (tuple)(x356, x345, x349)
      x358 = (Umlaut.check_variable_length)(x357, 3, 357)
      x359 = (Umlaut.check_variable_length)(x350, 0, 350)
      x360 = x351(x356, x345, x349)
      x361 = (Base.Broadcast.materialize)(x360)
      x362 = (Statistics.mean)(x361)
      return x362
  end)